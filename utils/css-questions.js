const cssQuestions = [
  {
    id: 1,
    question: "Що таке CSS і яку роль він відіграє у веб-розробці?",
    answer:
      "CSS (Cascading Style Sheets) описує вигляд HTML: кольори, шрифти, відступи, сітки та анімації. Дає розділення структури (HTML) і презентації (CSS).",
  },
  {
    id: 2,
    question: "Поясніть відмінності між CSS, SCSS та LESS.",
    answer:
      "CSS — кінцевий стильовий код для браузера. SCSS і LESS — препроцесори, що компілюються у CSS та додають змінні, вкладення, міксини і функції. SCSS — синтаксис Sass, максимально схожий на CSS; LESS має схожі можливості, але іншу екосистему.",
  },
  {
    id: 3,
    question:
      "Як працюють селектори в CSS? Наведіть приклади різних типів селекторів.",
    answer:
      "Селектори описують, до чого застосувати стиль: тег (div), клас (.card), id (#app), атрибут ([type='email']), псевдоклас (:hover), псевдоелемент (::before), комбінатори (div > p, .a + .b, .a .b).",
  },
  {
    id: 4,
    question: "Що таке каскадування у CSS?",
    answer:
      "Коли кілька правил збігаються — перемагає те, що має більшу специфічність, потім пізніший порядок у коді, і лише потім успадкування. !important піднімає пріоритет усередині одного походження стилів.",
  },
  {
    id: 5,
    question:
      "Як можна застосувати стилі до елемента на основі його стану (наприклад, при наведенні курсора)?",
    answer:
      "Через псевдокласи: :hover, :focus, :focus-visible, :active, :disabled, :checked тощо. Напр.: a:hover { text-decoration: underline; }.",
  },
  {
    id: 6,
    question: "Що таке специфічність у CSS і як вона працює?",
    answer:
      "Оцінка «сили» селектора: inline-стилі > id > класи/атрибути/псевдокласи > теги/псевдоелементи. Вищий рівень важливості (!important) перекриває без нього.",
  },
  {
    id: 7,
    question:
      "Як працює властивість display? Назвіть відмінності між block, inline, inline-block.",
    answer:
      "block — новий рядок, займає всю ширину; inline — у рядку, ширина за вмістом, не можна ставити вертикальні margin/top/bottom; inline-block — як inline, але підтримує ширину/висоту та вертикальні відступи.",
  },
  {
    id: 8,
    question: "Поясніть, як працює властивість position і назвіть її значення.",
    answer:
      "static (за замовч.), relative (зсув від свого місця), absolute (позиціювання від найближчого позиціонованого предка), fixed (від вікна), sticky (гібрид: прилипає при скролі).",
  },
  {
    id: 9,
    question:
      "Що таке flexbox і як його використовувати для створення макетів?",
    answer:
      "Одновимірний лейаут: display:flex; керує головною/перехресною віссю (justify-content, align-items), розподілом простору (flex-grow/shrink/basis) та порядком (order).",
  },
  {
    id: 10,
    question:
      "Поясніть, як працює grid і коли його краще використовувати замість flexbox.",
    answer:
      "Grid — двовимірна сітка (рядки+колонки): grid-template-columns/rows, areas, gap. Беріть grid для складних 2D макетів, flex — для лінійних/одновимірних.",
  },
  {
    id: 11,
    question:
      "Що таке медіа-запити і як їх використовувати для адаптивного дизайну?",
    answer:
      "Правила @media змінюють стилі за умовою: @media (max-width: 768px) { ... }. Використовують для брейкпоінтів, тем і доступності (prefers-reduced-motion).",
  },
  {
    id: 12,
    question:
      "Як працює властивість float і як її можна використовувати для створення макетів?",
    answer:
      "float «обтікає» елемент текстом (left/right). Історично використовували для колонок, тепер — рідше. Потрібен clearfix для батьківського контейнера.",
  },
  {
    id: 13,
    question:
      "Що таке псевдокласи і псевдоелементи? Наведіть приклади їх використання.",
    answer:
      "Псевдокласи описують стани (:hover, :focus, :nth-child). Псевдоелементи створюють віртуальні вузли (::before, ::after, ::first-line).",
  },
  {
    id: 14,
    question: "Як працює властивість z-index?",
    answer:
      "Керує порядком накладання всередині стекінг-контексту. Працює для позиціонованих елементів і тих, що створюють новий контекст (transform, opacity<1, filter тощо).",
  },
  {
    id: 15,
    question: "Що таке коробкова модель у CSS?",
    answer:
      "Кожен елемент має content, padding, border, margin. box-sizing: content-box (за замовч.) або border-box (ширина включає padding+border).",
  },
  {
    id: 16,
    question:
      "Як можна вирівняти елементи вертикально і горизонтально за допомогою CSS?",
    answer:
      "Flex: display:flex; justify-content:center; align-items:center;. Grid: place-items:center;. Також margin:auto, text-align:center, або transform: translate(-50%,-50%).",
  },
  {
    id: 17,
    question: "Як працюють анімації та переходи у CSS?",
    answer:
      "Переходи (transition) анімують зміну властивостей між станами. Анімації (animation + @keyframes) керують проміжними кадрами незалежно від події.",
  },
  {
    id: 18,
    question: "Що таке властивість overflow і як вона працює?",
    answer:
      "Керує переповненням: visible, hidden, scroll, auto. Значення, відмінне від visible, створює новий контекст форматування (BFC) у блоків.",
  },
  {
    id: 19,
    question:
      "Як можна створити CSS-препроцесори і для чого вони використовуються?",
    answer:
      "Створювати не потрібно — їх використовують (Sass/SCSS, Less). Вони додають змінні, вкладення, міксини, функції та збираються у CSS у збірнику (Webpack/Vite).",
  },
  {
    id: 20,
    question:
      "Що таке модульні CSS-системи (наприклад, BEM) і як вони допомагають у підтримці стилів?",
    answer:
      "BEM задає неймінг та ізоляцію: block__element--modifier. Спрощує масштабування й повторне використання стилів у великих проєктах.",
  },
  {
    id: 21,
    question:
      "Як працює властивість opacity і як її можна використовувати у поєднанні з кольорами?",
    answer:
      "opacity впливає на елемент і дітей (0..1). Щоб не «блякли» діти, використовуйте кольори з альфою (rgba/hsla) або прозорі шари замість opacity.",
  },
  {
    id: 22,
    question: "Що таке CSS-спрайт і як його використовувати?",
    answer:
      "Одна велика картинка з багатьма іконками; виводимо частини через background-position. Менше запитів, швидше завантаження (альтернатива — SVG-спрайт).",
  },
  {
    id: 23,
    question: "Як можна підключити шрифти до веб-сторінки за допомогою CSS?",
    answer:
      "@font-face із форматами woff2/woff, або посилання на Google Fonts. Налаштуйте font-display: swap і підмножини шрифтів для продуктивності.",
  },
  {
    id: 24,
    question:
      "Поясніть, як працює властивість background і які значення вона може приймати.",
    answer:
      "Шортхенд: колір, зображення, позиція/size (через '/'), повтор, прикріплення, origin/clip. Підтримує кілька шарів (розділених комами).",
  },
  {
    id: 25,
    question: "Як можна створити адаптивні зображення за допомогою CSS?",
    answer:
      "max-width:100%; height:auto; object-fit: cover/contain; @media для background-image; image-set() для екранів з різною щільністю.",
  },
  {
    id: 26,
    question: "Що таке властивість box-shadow і як її використовувати?",
    answer:
      "Тінь елемента: box-shadow: x y blur spread color [inset]; підтримує кілька тіней через коми.",
  },
  {
    id: 27,
    question:
      "Як працює властивість transform і які трансформації вона підтримує?",
    answer:
      "2D/3D перетворення: translate, scale, rotate, skew, perspective. Створює новий стекінг-контекст і може вмикати GPU.",
  },
  {
    id: 28,
    question: "Поясніть різницю між rem і em одиницями в CSS.",
    answer:
      "em — відносно поточного font-size елемента/батька; rem — відносно кореневого (html). Для консистентності брейкпоінтів зручні rem.",
  },
  {
    id: 29,
    question: "Як можна використовувати змінні у CSS?",
    answer:
      "Кастомні властивості: :root { --gap: 12px; } .box { gap: var(--gap, 8px); }. Вони успадковуються і можуть змінюватися в рантаймі.",
  },
  {
    id: 30,
    question: "Що таке важливість у CSS і як використовувати !important?",
    answer:
      "!important підвищує пріоритет правила. Використовуйте рідко: краще керувати специфічністю/архітектурою. !important перекриє більш специфічний селектор без нього.",
  },
  {
    id: 31,
    question: "Як можна створити багатоколоночні макети за допомогою CSS?",
    answer:
      "CSS Multi-column: column-count/column-width/column-gap; або сучасніші grid/flex для контролю позицій елементів.",
  },
  {
    id: 32,
    question:
      "Поясніть, як працює властивість clip-path і для чого вона використовується.",
    answer:
      "Обрізає видиму область елемента фігурою: circle(), ellipse(), polygon() або SVG path (url(#id)). Для масок/фігурних картинок.",
  },
  {
    id: 33,
    question:
      "Що таке прогресивне посилення (progressive enhancement) та graceful degradation у CSS?",
    answer:
      "PE: спочатку базова підтримка, потім покращення через @supports/медіа. GD: спочатку повна версія, для старих — прийнятне «спрощення».",
  },
  {
    id: 34,
    question:
      "Як працює властивість filter і які фільтри можна застосувати до елементів?",
    answer:
      "filter: blur/brightness/contrast/grayscale/hue-rotate/invert/saturate/sepia/drop-shadow. Обережно з продуктивністю на великих елементах.",
  },
  {
    id: 35,
    question: "Як можна вирішувати проблеми з кросбраузерною сумісністю у CSS?",
    answer:
      "Перевіряйте caniuse.com, використовуйте Autoprefixer, @supports, поліліли/нормалайзери (normalize.css), прогресивне посилення і тестування на реальних пристроях.",
  },
  {
    id: 36,
    question:
      "Що таке CSS Modules і як їх використовувати у сучасних фронтенд-фреймворках?",
    answer:
      "Локальна ізоляція класів (file.module.css). Імпортуєте як об’єкт: styles.btn. Бандлери генерують унікальні імена для уникнення конфліктів.",
  },
  {
    id: 37,
    question: "Як працює властивість object-fit і коли її варто застосовувати?",
    answer:
      "Керує вписуванням медіа у контейнер: cover/contain/fill/none/scale-down. Зручно для <img>/<video> з фіксованими розмірами.",
  },
  {
    id: 38,
    question:
      "Поясніть, як працюють ключові кадри (@keyframes) у CSS анімаціях.",
    answer:
      "@keyframes описує стани у відсотках/ключах (from/to). animation-*: ім’я, тривалість, таймінг, напрям, повтори, заповнення (fill-mode).",
  },
  {
    id: 39,
    question:
      "Що таке властивість min-width, max-width, min-height, max-height і як їх використовувати?",
    answer:
      "Обмеження розмірів. Корисні для респонсиву: напр., width:100%; max-width:1200px; забезпечує «рідку» ширину з верхньою межею.",
  },
  {
    id: 40,
    question: "Як можна оптимізувати продуктивність CSS на веб-сторінках? scss",
    answer:
      "Мінімізуйте/об’єднуйте CSS, інлайньте critical CSS, уникайте глибокого вкладення/важких селекторів, зменшуйте кількість вебшрифтів, використовуйте кеш, у SCSS генеруйте рівно стільки, скільки треба (без зайвих міксинів/циклів).",
  },
  {
    id: 41,
    question: "Що таке SCSS і чим він відрізняється від CSS?",
    answer:
      "SCSS — синтаксис Sass, що додає можливості (змінні, міксини, вкладення, функції) і компілюється у звичайний CSS.",
  },
  {
    id: 42,
    question: "Поясніть, як використовувати змінні у SCSS. Наведіть приклад.",
    answer:
      "Визначаєте $color: #4da6ff; і використовуєте: .btn { color: $color; }.",
  },
  {
    id: 43,
    question: "Як працюють вкладені правила (nested rules) у SCSS?",
    answer:
      "Пишете селектори всередині батьків: .card { .title { ... } &--active { ... } }, що компілюється у .card .title та .card--active.",
  },
  {
    id: 44,
    question: "Що таке міксини (mixins) у SCSS і як їх використовувати?",
    answer:
      "@mixin задає повторно-використовувані блоки з параметрами; @include підключає: @mixin center($gap:8px){display:flex;gap:$gap;align-items:center;justify-content:center;} .box{@include center(12px);}",
  },
  {
    id: 45,
    question:
      "Як можна використовувати наслідування (inheritance) у SCSS за допомогою @extend?",
    answer:
      "@extend ділиться деклараціями між селекторами. Краще через плейсхолдери: %btn{...} .primary{@extend %btn;} — менше побічних ефектів.",
  },
  {
    id: 46,
    question:
      "Поясніть, як працюють часткові файли (partials) у SCSS і як їх імпортувати.",
    answer:
      "Partial — файл з '_' на початку (напр. _variables.scss). Підключайте через @use або @forward; вони не генерують CSS напряму.",
  },
  {
    id: 47,
    question:
      "Що таке оператори та функції у SCSS? Наведіть приклади їх використання.",
    answer:
      "Оператори + - * / %, порівняння; функції на кшталт lighten(), darken(), map-get(), nth(), str-length(). Напр.: padding: $base * 2; color: lighten($primary,10%);",
  },
  {
    id: 48,
    question: "Як використовувати цикли (loops) у SCSS? Наведіть приклад.",
    answer:
      "@for, @each, @while. Напр.: @for $i from 1 through 12 { .col-#{$i}{ width: (100%/12)*$i; } }",
  },
  {
    id: 49,
    question: "Як можна застосовувати умовні конструкції (if/else) у SCSS?",
    answer:
      "@if ... @else. Напр.: @mixin theme($mode){ @if $mode==dark { background:#000; } @else { background:#fff; } }",
  },
  {
    id: 50,
    question:
      "Поясніть різницю між міксинами і плейсхолдерами (placeholders) у SCSS.",
    answer:
      "Міксини копіюють декларації (можуть приймати параметри). Плейсхолдери (%name) об’єднують селектори через @extend, без параметрів.",
  },
  {
    id: 51,
    question: "Як використовувати списки та карти (maps) у SCSS?",
    answer:
      "Списки: $sizes: 4px 8px 16px; карти: $colors:(primary:#4da6ff, danger:#e74c3c); map-get($colors, primary); ітерація через @each.",
  },
  {
    id: 52,
    question:
      "Що таке директива @import у SCSS і як вона відрізняється від директиви @use?",
    answer:
      "@import застаріла: глобальний простір і дублювання. @use — модульна, один раз підключає і неймспейсить (as * або alias). Рекомендується @use/@forward.",
  },
  {
    id: 53,
    question:
      "Поясніть, як працює директива @media у SCSS і як її використовувати для адаптивного дизайну.",
    answer:
      "Так само, як у CSS, але можна вкладати: .box { @media (min-width: 768px) { padding: 24px; } } і використовувати змінні брейкпоінтів.",
  },
  {
    id: 54,
    question:
      "Як можна використовувати функції darken() і lighten() у SCSS для маніпулювання кольорами?",
    answer:
      "Вони змінюють яскравість HSL: color: darken($primary, 10%); color: lighten($primary, 8%); — зручно для станів :hover/:active.",
  },
  {
    id: 55,
    question:
      "Що таке контроль діапазону (range) у SCSS і як його застосовувати у циклах?",
    answer:
      "Це межі у @for: from ... through (включно) / to (виключно). Напр.: @for $i from 0 through 5 { ... }.",
  },
  {
    id: 56,
    question:
      "Поясніть, як працює директива @forward у SCSS і коли її використовувати.",
    answer:
      "@forward «реекспортує» модуль: створює публічне API пакету частин. Корисно будувати index.scss, який збирає підмодулі.",
  },
  {
    id: 57,
    question: "Як можна ділити проект на модулі за допомогою SCSS?",
    answer:
      "Структура на кшталт 7-1: abstracts (vars, mixins), base, components, layout, pages, themes, vendors + main.scss; модульність через @use/@forward.",
  },
  {
    id: 58,
    question:
      "Що таке компіляція SCSS у CSS і які інструменти для цього існують?",
    answer:
      "Компілітор Dart Sass (рекомендований), інтеграція через Webpack/Vite/Rollup (sass-loader), або CLI. node-sass застарів на користь dart-sass.",
  },
  {
    id: 59,
    question: "Як можна створити і використовувати мапу кольорів у SCSS?",
    answer:
      "$palette:(primary:#4da6ff, success:#2ecc71); .btn--primary{background: map-get($palette, primary);} @each $k,$v in $palette { .text-#{$k}{color:$v;} }",
  },
  {
    id: 60,
    question:
      "Що таке SASS, як він відрізняється від SCSS, і коли який варіант краще використовувати?",
    answer:
      "Sass (індентований синтаксис, без фігурних дужок/крапок з комою) vs SCSS (як CSS). Більшість команд обирає SCSS через знайомий синтаксис.",
  },
  {
    id: 61,
    question: "Як працюють вкладені медіа-запити у SCSS?",
    answer:
      "Їх можна писати всередині правил: .grid{ @media (min-width:$md){ gap: $g-lg; } } — зручно тримати стилі компонента разом.",
  },
  {
    id: 62,
    question: "Що таке @mixin і @include у SCSS і як вони взаємодіють?",
    answer:
      "@mixin оголошує шматок стилів, @include вставляє його в потрібне місце (з параметрами або без).",
  },
  {
    id: 63,
    question:
      "Як можна обробляти помилки у SCSS за допомогою директиви @error?",
    answer:
      "@error зупиняє компіляцію з повідомленням; також є @warn (попередження) та @debug (лог значень) для діагностики.",
  },
  {
    id: 64,
    question:
      "Поясніть, як використовувати SCSS для створення темінгу (theming) у веб-застосунках.",
    answer:
      "Зберігайте темні/світлі палети у картах і генеруйте класи або CSS-змінні: :root{--c: #...} [data-theme=dark]{--c: #...}; SCSS зручно генерує набори.",
  },
  {
    id: 65,
    question: "Що таке @function у SCSS і як її створювати?",
    answer:
      "@function повертає значення: @function rem($px){ @return ($px/16)*1rem; } .title{ font-size: rem(20); }",
  },
  {
    id: 66,
    question:
      "Як працює оператор & (ампесанд) у SCSS і як його використовувати?",
    answer:
      "& — посилання на поточний селектор: .btn { &--primary{...} &:hover{...} & + &{margin-left:8px;} }",
  },
  {
    id: 67,
    question:
      "Як можна використовувати директиву @at-root у SCSS і для чого вона потрібна?",
    answer:
      "@at-root «виводить» правило з поточного вкладення до кореня або потрібного контексту — корисно уникати надмірно довгих селекторів.",
  },
  {
    id: 68,
    question:
      "Поясніть, як використовувати SCSS разом з сучасними фреймворками, такими як React чи Angular.",
    answer:
      "Використовуйте .module.scss (CSS Modules) або глобальні SCSS. Бандлер (Vite/Webpack) компілює SCSS; імпортуйте файли прямо у компоненти.",
  },
  {
    id: 69,
    question: "Як можна організувати структуру файлів SCSS у великому проекті?",
    answer:
      "Папки: abstracts, base, components, layout, pages, themes, vendors; індексні файли з @forward; головний main.scss з @use блоків.",
  },
  {
    id: 70,
    question: "Що таке @content у SCSS і як його застосовувати у міксинах?",
    answer:
      "@content дозволяє передати блок стилів до міксина: @mixin card{ padding:16px; @content; } .panel{ @include card { background:#fff; } }",
  },
];

export default cssQuestions;
